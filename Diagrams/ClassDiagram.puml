@startuml ClassDiagram
'Moderation 
enum ModerationStatus{
    PendingReview,
    Active,
    Deactivated
}

class DeactivationRecord{
  +long id
  +long gigId  ' nullable
  +string userId ' nullable
  +string reason
  +string description
  +DateTime createdAt
}

class ReportedItem{
  +long id
  +long gigId  ' nullable
  +string userId ' nullable
  +string reportedById
  +string reason
  +DateTime createdAt
}




'Categories
class MainCategory {
  +long id
  +String name
  +String description
  +List<SubCategory> subCategories
  +List<FAQ> faqs
}

class SubCategory {
  +long id
  +String name
  +String imageURL
  +long mainCategoryId
  +List<SubSubCategory> subSubCategories
}

class SubSubCategory {
  +long id
  +String name
  +long subCategoryId
  +List<Gigs> gigs
  +List<GigFilter> gigFilters
}

enum GigFilterType {
    DeliveryTime,
    PriceRange,
    SellerDetails,
    ServiceIncludes
}

class GigFilter {
  +long id
  +String? title
  +GigFilterType type
  +List<FilterOptions> options
}

class FilterOption {
  +long id
  +String name
  +long gigFilterId
}

class FAQ {
    +long id
    +String question
    +String answer
    +long mainCategoryId  ' nullable 
    +long gigId           ' nullable 
    +long userId          ' nullable
}




'Messaging
class Conversation{
  +long id
  +String buyerId
  +String sellerId
  +DateTime createdAt
  +DateTime lastMessageAt
  +boolean isStarredByBuyer
  +boolean isStarredBySeller
  +long? orderId
  +long? gigId
  +List<Message> messages
}

class Message{
  +long id
  +String text
  +DateTime sentAt
  +long conversationId
  +String senderId
  +String receiverId
  +String photoURL 'nullable
  +boolean isRead
  +long? customOfferId
  +long? customRequestId
  +long? deliveryId
  +long? revisionId
}



'Orders
enum OrderStatus {
    PlacedOrder,
    SubmittedRequirements,
    Pending,
    InProgress,
    Delivered
}

class OrderDeliveryDate{
  +long id
  +long orderId
  +DateTime deliveryDate
  +boolean isDeliveryDateChanged
  +string changeDateReason 'nullable
}

class Order{
  +long id
  +String orderNumber
  +long gigId  'nullable
  +long customOfferId  'nullable
  +long selectedPaymentPlanId  'nullable
  +String buyerId
  +DateTime createdAt
  +DateTime deliveredAt   'nullable
  +OrderStatus status
  +List<Review> reviews  'nullable
  +long conversationId  'nullable
  +List<Revision> revisions  'nullable
  +List<GigRequirementAnswer> gigRequirementAnswers  
  +long invoiceId  'nullable
  +long deliveryId  'nullable
}

class GigRequirementAnswer{
  +long id
  +String answer
  +long gigRequirementId
  +long orderId
  +string userId
  +List<String> fileUrls
}

class Review{
  +long id
  +String comment
  +int ratingStars
  +DateTime createdAt
  +long orderId
  +String creatorId
}

class Invoice{
  +long id
  +long orderId
  +String invoiceNumber
  +DateTime createdAt
  +double tax
  +double amount
}

enum RevisionStatus {
    Pending,
    Accepted,
    Rejected
}

class Revision{
  +int id
  +String description
  +int orderId
  +DateTime createdAt
  +DateTime? acceptedAt
  +DateTime? rejectedAt
  +RevisionStatus status
  +String? rejectionReason 'nullable
  +List<string> attachmentUrls 'nullable
  +string?  sourcefileUrl
}

class Delivery{
  +int id
  +String description
  +int orderId
  +DateTime createdAt
  +DateTime? acceptedAt
  +List<string> attachmentUrls 'nullable
  +string? sourcefileUrl
}


'Custom Offers
enum CustomOfferStatus {
    Pending,
    Accepted,
    Rejected,
    Withdrawn,
    Expired
}

class CustomOffer{
  +long id
  +String description
  +double price
  +int revisions
  +int deliveryTimeInDays
  +long conversationId
  +long gigId
  +String sellerId
  +String customOfferNumber
  +String buyerId
  +CustomOfferStatus status
  +DateTime createdAt
  +String rejectionReason 'nullable
  +String withdrawalReason 'nullable
  +List<SubSubCategoryFilter> selectedFilters
  +DateTime acceptedAt 'nullable
  +DateTime rejectedAt 'nullable
  +DateTime expiredAt 
  +long customRequestId  'nullable
  +long projectBriefId 'nullable
}




'Gigs
class GigMetadata{
  +long id
  +long filterOptionId
  +long gigId
}

class GigRequirement{
  +long id
  +String question
  +long gigId
  +boolean isFileUpload
}

class PaymentPlan{
  +long id
  +String name
  +double price
  +long gigId
  +int deliveryTimeInDays
  +int revisions
  +String description
  +List<PaymentPlanInclude> inclusions
}

class PaymentPlanInclude{
  +long id
  +String name
  +String value
  +long paymentPlanId
}

class Gig{
  +long id
  +String title
  +String description
  +String imageURL
  +String sellerId
  +String mainCategoryId
  +long subCategoryId
  +long subSubCategoryId
  +ModerationStatus moderationStatus
  +List<FAQ> faqs
  +List<GigMetadata> metadata
  +List<GigRequirement> requirements
  +List<PaymentPlan> paymentPlans
  +List<String> imageURLs
  +string videoURL 'nullable
  +List<Tag> tags
  +List<Order> orders 'nullable
  +List<CustomOffer> customOffers 'nullable
  +List<CustomRequest> customRequests 'nullable
}

class Tag{
  +long id
  +String name
  +long gigId
}


'Common
interface IBaseEntity<TId> {
    +TId id    ' Generic identifier
}

class BaseEntity<long> {
    +Long id        ' Concrete long ID
}

class BaseEvent {

}

interface ISoftDelete {
    +Boolean isDeleted
    +DateTime? deletedAt 
}

abstract class SoftDeletableEntity{
    +Boolean isDeleted
    +DateTime? deletedAt 
}

' Users
class ApplicationUser{
  +List<Notification> notifications   'nullable
  +List<Conversation>? conversations  'nullable
  +List<FAQ> faqs       'nullable
  +String description    'nullable
  +String fullName     'nullable
  +Address address    'nullable
  +ModerationStatus moderationStatus
  +String identityUserId
  +DateTime joinedAt
  +string photoURL      'nullable
  +List<UserLanguage> userLanguages   'nullable
  +List<Reviews> reviews    'nullable
  +List<Order>? orders  'nullable
  +List<CustomOffer>? customOffers'nullable
  +List<ProjectBrief>? projectBriefs'nullable
}

class Buyer{
  +String applicationUserId
  +List<Invoice>? invoices
  +long? billingDetailsId
  +List<FavouriteGigsList>? favoriteGigsList
  +List<BrowsingHistory>? browsingHistoryGigs
}

class FavouriteGigsList{
  +long id
  +String buyerId
  +List<FavouriteGig> favouriteGigs
  +DateTime createdAt
  +String description
  +String name
}

class FavouriteGig{
  +long id
  +String buyerId
  +long gigId
  +DateTime createdAt
  +long favouriteGigsListId
}

class BrowsingHistory{
  +long id
  +String buyerId
  +long gigId
  +DateTime createdAt
}

class Address{
  +long id
  +String country
  +String city
  +String street
  +String zipCode
  +String userId  
  +boolean isBillingAddress
}

class BillingDetails{
  +String fullName  
  +Address billingAddress
  +String? companyName
}

class Seller{
  +String applicationUserId
  +List<Gig>? gigs
  +List<Certification>? certifications
  +List<Education>? educations
  +List<Skill>? skills
  +List<Portfolio>? portfolios
}

enum SkillLevel {
    Basic,
    Intermediate,
    Advanced
}

class Skill{
  +int id
  +String name
  +SkillLevel level
  +int sellerId
}

enum ProficiencyLevel {
    Basic,
    Conversational,
    Fluent,
    Native
}

class Language{
  +long id 
  +String name 
}

class UserLanguage{
  +long languageId
  +ProficiencyLevel proficiencyLevel
  +string userId
}

enum EducationDegree{
    HighSchool,
    Bachelors,
    Masters,
    PhD
}

class Education{
  +int id
  +String schoolName
  +EducationDegree degree
  +DateTime startDate
  +DateTime endDate
  +int sellerId
}

class Certification{
  +int id
  +String name
  +String issuer
  +DateTime dateObtained
  +int sellerId
}

class Portfolio{
  +int id
  +String title
  +String description
  +String List<imageURL>
  +int sellerId
  +String videoURL 'nullable
}




'Custom Requests
enum CustomRequestStatus {
    Pending,
    Accepted,
    Rejected,
    Withdrawn
}

class CustomRequest{
  +long id
  +String description
  +String buyerId
  +int gigId
  +DateTime createdAt
  +DateTime? acceptedAt
  +DateTime? rejectedAt
  +String rejectionReason 'nullable
  +decimal budget
  +int deliveryTimeInDays
  +string customRequestNumber
  +List<String> photoURL 'nullable
}



'Notifications
class Notification{
  +long id
  +String title
  +String description
  +DateTime createdAt
  +String userId
  +boolean isRead
  +String type
}



'Project Briefs
enum ProjectBriefStatus {
    Pending,
    OrderPlaced,
    Delivered,
    Cancelled
}

class ProjectBrief{
  +int id
  +String description
  +String aboutBuyer
  +int buyerId
  +DateTime createdAt
  +DateTime? closedAt
  +ProjectBriefStatus status
  +decimal budget
  +int deliveryTimeInDays
  +string projectBriefNumber
  +int? mainCategoryId
  +int? subCategoryId
  +List<CustomOffer>? customOffers
}



@enduml
